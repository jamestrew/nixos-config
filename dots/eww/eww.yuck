(defwindow bar
  :monitor 0
  :geometry (geometry :x "0%"
             :y "0%"
             :width "100%"
             :height "24px"
             :anchor "top center")
  :stacking "fg"
  :reserve (struts :distance "24px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (box :class "bar"
       :orientation "horizontal"
       :space-evenly false
    (bar-left)
    (bar-right)))


(defwidget sep []
  (box :class "module-2" :vexpand "false" :hexpand "false"
    (label :class "separator" :text "|")))

(defwidget bar-left []
  (box :orientation "horizontal"
       :space-evenly false
       :halign "start"
       :hexpand true
    (workspaces)
    (sep)
    (layout)))

(deflisten workspace-widgets :initial "" "scripts/workspace-widget.sh 0")
(deflisten layout-widget :initial "" "scripts/layout-widget.sh 0")

(defwidget workspaces [] (literal :content workspace-widgets))
(defwidget layout [] (literal :content layout-widget))

(defwidget clock []
  (button :class "clock"
          :onclick "scripts/calendar-toggle.sh"
          :onrightclick "xdg-open https://calendar.google.com"
          :tooltip "Click for calendar • Right-click for Google Calendar"
          :timeout "1s"
    (label :text {formattime(EWW_TIME, "%a %b %d %H:%M:%S")})))

(defwidget cpu-widget []
  (box :class "cpu-widget"
       :orientation "horizontal"
       :space-evenly false
       :spacing 4
    (label :class "cpu-icon" :text "󰍛")
    (label :class "cpu-usage" :text "${round(EWW_CPU.avg, 1)}%")))

(defwidget ram-widget []
  (box :class "ram-widget"
       :orientation "horizontal"
       :space-evenly false
       :spacing 4
    (label :class "ram-icon" :text "󰉉")
    (label :class "ram-usage" :text "${round(EWW_RAM.used_mem_perc, 1)}%")))

(defwidget weather-widget []
  (eventbox :class "weather-widget"
            :onclick "scripts/weather.sh refresh"
            :tooltip "${weather-data.error ? 'Weather error: ${weather-data.condition} • Click to retry' : '${weather-data.condition} • Click to refresh'}"
    (box :orientation "horizontal"
         :space-evenly false
         :spacing 4
      (label :class "weather-icon" 
             :text "${weather-data.error ? '' : weather-data.icon}")
      (label :class "weather-temp" 
             :text "${weather-data.temp}°")
      (label :class "weather-humidity" 
             :text "󰖌${weather-data.humidity}%")
      (label :class "weather-wind" 
             :text " ${weather-data.wind}"))))

(deflisten audio-info :initial "{\"volume\": 50, \"muted\": false}"
  "scripts/audio.sh")

(defpoll weather-data :interval "10m" :initial "{\"icon\": \"\", \"temp\": \"--\", \"humidity\": \"--\", \"wind\": \"--\", \"error\": true}"
  "scripts/weather.sh")

(defwidget audio-widget []
  (eventbox :class "audio-widget"
            :onclick "scripts/audio.sh toggle_mute"
            :onrightclick "pavucontrol &"
            :onscroll "scripts/audio.sh {}"
            :timeout "500ms"
            :tooltip "Left-click: toggle mute • Right-click: volume control • Scroll: volume"
    (box :orientation "horizontal"
         :space-evenly false
         :spacing 4
      (label :class "audio-icon"
             :text "${audio-info.muted ? '󰖁' : '󰕾'}")
      (label :class "audio-level"
             :text "${audio-info.muted ? 'Muted' : '${audio-info.volume}%'}"))))

(defwidget system-tray []
  (systray :class "system-tray"
           :orientation "horizontal"
           :space-evenly false
           :spacing 4
           :icon-size 20))




(defwidget bar-right []
  (box :orientation "horizontal"
       :space-evenly false
       :halign "end"
    (weather-widget)
    (sep)
    (cpu-widget)
    (sep)
    (ram-widget)
    (sep)
    (audio-widget)
    (sep)
    (clock)
    (system-tray)
    (sep)
    (control-center-toggle)))


(defwidget control-center-toggle []
  (button :class "control-center-toggle"
          :onclick "scripts/control-center-toggle.sh"
          :tooltip "Toggle Control Center"
    ""))

(defwidget control-center-layout []
  (box :class "control-center"
       :orientation "vertical"
       :space-evenly false
    (box :class "control-center-header"
         :orientation "horizontal"
         :space-evenly false
      (label :class "control-center-title"
             :text "Control Center"
             :halign "start"
             :hexpand true)
      (button :class "control-center-close"
              :onclick "eww close control-center"
              :halign "end" "✕"))
    (label :text "Control center content coming soon..."
           :class "control-center-placeholder")))

(defwidget calendar-layout []
  (box :class "calendar"
       :orientation "vertical"
       :space-evenly false
    (box :class "calendar-header"
         :orientation "horizontal"
         :space-evenly false
      (label :class "calendar-title"
             :text {formattime(EWW_TIME, "%B %Y")}
             :halign "start"
             :hexpand true)
      (button :class "calendar-close"
              :onclick "eww close calendar"
              :halign "end" "✕"))
    (calendar :class "calendar-widget"
              :show-heading true
              :show-day-names true
              :show-details true
              :show-week-numbers false)))


(defwindow calendar
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore true
  :geometry (geometry :x -20 :y 30 :width "300px" :height "250px" :anchor "top right")
  (calendar-layout))

(defwindow control-center
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore true
  :geometry (geometry :x -20 :y -30 :width "28%" :height "85%" :anchor "right center")
  (control-center-layout))


