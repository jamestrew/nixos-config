#!/usr/bin/env bash

# /tmp/qtile-layouts.ndjson generated by qtile hooks
# example line:
# {"screens": [{"screen": 0, "group": "dev", "layout": "cols"}, {"screen": 1, "group": "doc", "layout": "cols"}], "groups_with_windows": ["www", "gtd", "coms", "dev"], "active_screen": 0}

generate_workspace_widgets() {
    local layout_data="$1"
    local monitor_id="$2"

    if [ -n "$layout_data" ]; then
        screen0_workspace=$(echo "$layout_data" | jq -r '.screens[] | select(.screen == 0) | .group' 2>/dev/null || echo "www")
        screen1_workspace=$(echo "$layout_data" | jq -r '.screens[] | select(.screen == 1) | .group' 2>/dev/null || echo "dev")
        active_screen=$(echo "$layout_data" | jq -r '.active_screen' 2>/dev/null || echo "0")
        groups_with_windows=$(echo "$layout_data" | jq -r '.groups_with_windows[]?' 2>/dev/null)
    else
        screen0_workspace="www"
        screen1_workspace="dev"
        active_screen="0"
        groups_with_windows=""
    fi

    workspaces=("www" "gtd" "coms" "doc" "dev" "dev2" "fun")
    widget="(box :orientation \"horizontal\" :spacing 2"

    for ws in "${workspaces[@]}"; do
        has_windows=$(echo "$groups_with_windows" | grep -q "^$ws$" && echo "true" || echo "false")

        class="workspace"
        if [ "$active_screen" = "$monitor_id" ] && [ "$screen0_workspace" = "$ws" ] && [ "$monitor_id" = "0" ]; then
            class="$class active"
        elif [ "$active_screen" = "$monitor_id" ] && [ "$screen1_workspace" = "$ws" ] && [ "$monitor_id" = "1" ]; then
            class="$class active"
        elif [ "$screen0_workspace" = "$ws" ] || [ "$screen1_workspace" = "$ws" ]; then
            class="$class secondary"
        fi

        if [ "$has_windows" = "true" ]; then
            class="$class occupied"
        fi

        widget="$widget (button :class \"$class\" :onclick \"qtile cmd-obj -o group '$ws' -f toscreen\" \"$ws\")"
    done

    echo "$widget)"
}

monitor_id="${1:-0}"

if [ -f /tmp/qtile-layouts.ndjson ]; then
    initial_data=$(tail -n1 /tmp/qtile-layouts.ndjson 2>/dev/null)
    generate_workspace_widgets "$initial_data" "$monitor_id"
else
    generate_workspace_widgets "" "$monitor_id"
fi

tail -n0 -F /tmp/qtile-layouts.ndjson 2>/dev/null | while read -r line; do
    generate_workspace_widgets "$line" "$monitor_id"
done
